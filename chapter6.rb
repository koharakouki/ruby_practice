# 〜正規表現〜

# 入門1

\d : 1個の半角数字

# 半角数字2個、ハイフン、半角数字4個、ハイフン、半角数字4個」が並んだ文字列
\d\d-\d\d\d\d-\d\d\d\d


var text = "名前：伊藤淳一\n電話：03-1234-5678\n住所：兵庫県西脇市板波町1-2-3";
text.match(/\d\d-\d\d\d\d-\d\d\d\d/g);#gはグローバルオプション
// => ["03-1234-5678"]

#グローバルオプションとは
g なし => 最初の1件が見つかったら検索終了
g あり => 一致する文字列をすべて抽出



# 電話番号はいろんなパターンがある
電話：03-1234-5678
電話：090-1234-5678
電話：0795-12-3456
電話：04992-1-2345

\d{2,5}-\d{1,4}-\d{4} #で全てマッチする

# {n,m},{n}は量指定子
{n,m} : 直前の文字が n 個以上、m 個以下
{n}   : ちょうどn文字



# 電話番号はこんなパターンも
電話：03(1234)5678
電話：090-1234-5678
電話：0795(12)3456
電話：04992-1-2345

[AB] : AまたはBのいずれか1文字(文字数は無制限)
ハイフンまたはカッコ（開き）と、ハイフンまたはカッコ（閉じ）はそれぞれ、[-(]、[-)]
[a-z]は aまたはbまたはcまたは・・・・またはzみたいになる
[-az]は -またはaまたはz

\d{2,5}[-(]\d{1,4}[-)]\d{4} #で全てマッチする



# 入門2

# ～が1文字、または無し
無しの場合は ? を使う

. : 任意の1文字
+ : 直前の文字が1文字以上
* : 直前の文字が0文字以上


\w = [a-zA-Z0-9_]

[^A] : A以外の任意の文字






# Ruby入門6-3〜

# 正規表現と文字列を比較する場合は =~ が使われる

if '123-4567' =~ /\d{3}-\d{4}/
	p 'マッチしました'
else
	p 'マッチしませんでした'
end


text = '私の誕生日は1977年7月17日です'
m = /(\d+)年(\d+)月(\d+)日/.match(text)
m[0] #=> 1977年7月17日
m[1] #=> 1977
m[2] #=> 7
m[3] #=> 17

# キャプチャの結果に名前をつける
text = '私の誕生日は1977年7月17日です'
m = /(?<year>\d+)年(?<month>\d+)月(?<day>\d+)日/.match(text)
m[:year] #=> 1977
m[:month] #=> 7
m[:day] #=> 17



# case文で正規表現を使う
text = '03-6432-4310'

case text
when /^\d{3}-\d{4}$/
	puts '郵便番号です'
when /^\d{4}\/\d{1,2}\/\d{1,2}$/
	puts '日付です'
when /^\d{2,5}-\d{1,4}-\d{4}$/
	puts '電話番号です'
end


